name: Run Selenium Tests

on: [push, pull_request]

jobs:
  selenium-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install selenium webdriver-manager

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          sudo apt-get install -y zip  # Ensure zip is installed

      - name: Start Xvfb
        run: |
          Xvfb :99 -screen 0 1280x1024x16 &
        env:
          DISPLAY: ":99"

      - name: Run Selenium script with Retry
        id: run_test
        run: |
          max_attempts=3
          attempt=0
          success=false

          while [ $attempt -lt $max_attempts ]; do
            echo "Running attempt $((attempt + 1))..."
            python test_google.py > test_results.log && success=true && break
            attempt=$((attempt + 1))
            echo "Attempt $attempt failed. Retrying..."
            sleep 5  # Wait before retrying
          done

          if [ "$success" = true ]; then
            echo "Tests passed successfully."
          else
            echo "All attempts failed."
            exit 1
          fi

      - name: Take a Screenshot of Failure
        if: failure()  # Only run if the previous step fails
        run: |
            mkdir -p screenshots
            echo "Taking a screenshot..."
            python test_google.py  # Ensure this saves screenshots in the `screenshots/` directory
            
            # Capture the latest screenshot path and save it to logs
            LATEST_SCREENSHOT=$(ls -Art screenshots | tail -n 1)
            echo "Screenshot path: screenshots/$LATEST_SCREENSHOT" >> screenshot_paths.log || echo "No screenshots taken." > screenshot_paths.log
            cat screenshot_paths.log >> test_results.log  # Append to test results log for reference
            echo "Screenshot taken and path logged."

      - name: Zip Screenshots
        if: failure()  # Only zip if there was a failure
        run: |
          zip -r screenshots.zip screenshots/  # Zip the screenshots directory
          

      - name: Upload Screenshots and Logs
        id: upload_screenshots
        if: failure()  # Only upload if the previous step fails
        uses: actions/upload-artifact@v3
        with:
            name: screenshots_and_logs
            path: |
              screenshots.zip
              test_results.log
              screenshot_paths.log
            retention-days: 7  # Keep for 7 days

      - name: Generate Final Report
        run: |
          echo "Generating final report..."
          if [ -f test_results.log ]; then
            echo "Test Results:" > final_report.txt
            cat test_results.log >> final_report.txt
            echo "" >> final_report.txt
            echo "Screenshot paths:" >> final_report.txt

            # Check if screenshot_paths.log exists
            if [ -f screenshot_paths.log ]; then
              cat screenshot_paths.log >> final_report.txt
            else
              echo "No screenshots taken." >> final_report.txt
            fi
            
            echo "Final report generated."
          else
            echo "No test results found." > final_report.txt
          fi

      - name: Upload Final Report
        if: always()  # Always upload the report, regardless of test success
        uses: actions/upload-artifact@v3
        with:
          name: final_report
          path: final_report.txt
          retention-days: 7

      - name: Notify on Failure
        if: failure()
        run: |
            echo "A failure occurred. Check the screenshots and logs here: ${{ steps.upload_screenshots.outputs.artifact_url }}"

      - name: Notify on Success
        if: success()
        run: |
            echo "All tests passed successfully! No errors encountered."

         
